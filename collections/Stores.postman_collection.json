{
	"info": {
		"_postman_id": "aa9082cd-6a7b-417d-8c49-f85ba9f33260",
		"name": "Stores",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8109655"
	},
	"item": [
		{
			"name": "Crear una tienda válida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"storeId\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Tienda todo\",\n    \"city\": \"TUN\",\n    \"address\": \"Cll 1 2 3\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Crear una tienda válida",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tienda todo\",\n    \"city\": \"TUN\",\n    \"address\": \"Cll 1 2 3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"name\": \"Tienda todo\",\n    \"city\": \"TUN\",\n    \"address\": \"Cll 1 2 3\",\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "Crear una tienda inválida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Tienda todo\",\n    \"city\": \"Tunja\",\n    \"address\": \"Cll 1 2 3\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Crear una tienda inválida",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tienda todo\",\n    \"city\": \"Tunja\",\n    \"address\": \"Cll 1 2 3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"timestamp\": \"2023-11-19T04:35:01.793Z\",\n    \"path\": \"/api/v1/stores\",\n    \"message\": \"La ciudad debe ser una cadena de 3 caracteres ej. SMR, BOG, MED\"\n}"
				}
			]
		},
		{
			"name": "Obtener todas las tiendas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Número de tiendas > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Obtener todas las tiendas",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Tienda todo\",\n        \"city\": \"TUN\",\n        \"address\": \"Cll 1 2 3\",\n        \"products\": []\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener una tienda por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/{{storeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{storeId}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener una tienda por ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{storeId}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Tienda todo\",\n    \"city\": \"TUN\",\n    \"address\": \"Cll 1 2 3\",\n    \"products\": []\n}"
				}
			]
		},
		{
			"name": "Obtener una tienda por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stores/0000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"0000"
					]
				}
			},
			"response": [
				{
					"name": "Obtener una tienda por un ID que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stores/0000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"0000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"timestamp\": \"2023-11-19T04:38:30.719Z\",\n    \"path\": \"/api/v1/stores/0000\",\n    \"message\": \"La tienda con id 0000 no existe\"\n}"
				}
			]
		},
		{
			"name": "Actualizar una tienda",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Tienda todo todo\",\n    \"city\": \"TUN\",\n    \"address\": \"Cll 1 2 3\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores/{{storeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{storeId}}"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar una tienda",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tienda todo todo\",\n    \"city\": \"TUN\",\n    \"address\": \"Cll 1 2 3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{storeId}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Tienda todo todo\",\n    \"city\": \"TUN\",\n    \"address\": \"Cll 1 2 3\",\n    \"products\": []\n}"
				}
			]
		},
		{
			"name": "Actualizar una tienda con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Carne\",\n    \"price\": 15000,\n    \"type\": \"PRECEDERO\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores/0000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"0000"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar una tienda con un ID que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Carne\",\n    \"price\": 15000,\n    \"type\": \"PRECEDERO\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{storeId}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"timestamp\": \"2023-11-19T04:42:17.672Z\",\n    \"path\": \"/api/v1/stores/0000\",\n    \"message\": \"La tienda con id 0000 no existe\"\n}"
				}
			]
		},
		{
			"name": "Eliminar una tienda por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores/{{storeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"{{storeId}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar una tienda por su ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Carne\",\n    \"price\": 15000,\n    \"type\": \"PRECEDERO\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"{{storeId}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Eliminar una tienda con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/stores/0000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stores",
						"0000"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar una tienda con un ID que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Carne\",\n    \"price\": 15000,\n    \"type\": \"PRECEDERO\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stores/0000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stores",
								"0000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"timestamp\": \"2023-11-19T04:43:47.307Z\",\n    \"path\": \"/api/v1/stores/0000\",\n    \"message\": \"La tienda con id 0000 no existe\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}